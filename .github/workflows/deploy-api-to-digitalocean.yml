name: Deploy API to DigitalOcean
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/deploy-api-to-digitalocean.yml'
      - 'deployment/**'
      - 'api-v2/**'
      - '!**.md'

jobs:
  deploy-backend:
    name: Deploy the portfolio website backend.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the release branch working tree.
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push the Django image
        uses: docker/build-push-action@v3
        with:
          context: ./api-v2
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/portfolio:latest

      - name: Build and push the Nginx image
        uses: docker/build-push-action@v3
        with:
          context: ./deployment/nginx
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/portfolio:nginx-latest

      - name: Stop the old container network.
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.DROPLET_IP }}
          script: |
            cd ~/portfolio
            docker compose down
            rm -f docker-compose.yml docker-compose.yaml

      - name: Copy the compose file onto the remote server.
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.DROPLET_IP }}
          USERNAME: ${{ secrets.SSH_USER }}
          KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        with:
          source: api-v2/docker-compose.yml
          strip_components: 1
          target: ~/portfolio
          overwrite: true

      - name: Pull images, run containers.
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.DROPLET_IP }}
          script: |
            cd ~/portfolio
            docker compose pull
            docker compose up --detach